Get Objects: https://clay.powdev.lt/en/module/revisualizer/objects?ajax=1&action=getObjects
Set Object: https://clay.powdev.lt/en/module/revisualizer/objects?ajax=1
with data fields:
-> action: setObject
-> name: "My object name"
-> id_object: (for update) otherwise null

All colors: https://clay.powdev.lt/en/module/revisualizer/colors?ajax=1
Color of specifyc pallet: https://clay.powdev.lt/en/module/revisualizer/colors?ajax=1&id_pallet=1
All pallets: https://clay.powdev.lt/en/module/revisualizer/pallets?ajax=1&action=getPallets
Set Pallet: https://clay.powdev.lt/en/module/revisualizer/pallets?ajax=1 Works only if you are logged in.
with data fields:
-> action	: setPallet
-> name: "My pallet name"
-> colors: array of id_product_attributes

Add products to cart: https://clay.powdev.lt/en/module/revisualizer/cart?ajax=1
with data:
let data = {
    products: [
        {
            id_product_attribute: 88,
            qty: 5
        },

    ]
}; // Replace with actual data

https://clay.powdev.lt/lt/module/revisualizer/app

For work in JS I made variables for routes:
console.log(visualizer_objects); // To get or store objects
console.log(visualizer_pallets); // To get or store pallets
console.log(visualizer_colors); // To get colors
console.log(visualizer_cart); // To add products to cart

https://docs.google.com/document/d/1zZCAYU2tE0TH645JPELdAD1zjHOTq3-H_QUbQqL70LI/edit?tab=t.0


<div class="language-selector-wrapper dropdown js-dropdown popup-over popup-hover DeoModule" id="language-selector-label">
    <a class="popup-title" href="javascript:void(0)" data-toggle="dropdown" title="Language" aria-label="Language dropdown">
                                    <i class="sc-icon current lang en"></i>
                <span class="iso-code">en</span>
                                                <span class="name-simple">English</span>
        <i class="icon-arrow-down deo-custom-icons"></i>
    </a>
    <ul class="dropdown-menu popup-content link language-selector" aria-labelledby="language-selector-label">
                    <li class="current">
                <a href="https://clay.powdev.lt/en/module/revisualizer/app" class="dropdown-item" data-iso-code="en">
                    <i class="sc-icon lang en"></i>
                    <span class="lang-name">English</span>
                </a>
            </li>
                    <li>
                <a href="https://clay.powdev.lt/lt/module/revisualizer/app" class="dropdown-item" data-iso-code="lt">
                    <i class="sc-icon lang lt"></i>
                    <span class="lang-name">Lietuvių</span>
                </a>
            </li>
            </ul>
</div>

English
Lietuvių

let labelText = document.getElementById("language-selector-label").innerText.trim();
console.log(labelText);

https://stackoverflow.com/questions/22710627/tainted-canvases-may-not-be-exported


//input change detect
https://chatgpt.com/c/67cd5b07-9d74-800b-8e68-bb6c48ce6473

<input type="hidden" id="visualizer_customer_is_logged" name="visualizer_customer_is_logged" value="0">
<input type="hidden" id="visualizer_customer_id" name="visualizer_customer_id" value="0">
<input type="hidden" id="visualizer_language" name="visualizer_language" value="1">


/*  useEffect(() => {
    dispatch(featureActions.getColoursRequest());

    // getting logged in user info
    const scripts = document.querySelectorAll("script");
    let scriptContent = "";
    scripts.forEach(script => {
      if (script.textContent.includes("visualizer_customer_is_logged")) {
        scriptContent = script.textContent;
      }
    });
    const isLoggedInMatch = scriptContent.match(/let visualizer_customer_is_logged = "(.*?)"/);
    const customerIdMatch = scriptContent.match(/let visualizer_customer_id = "(.*?)"/);
    const visualizer_customer_is_logged = isLoggedInMatch ? isLoggedInMatch[1] : undefined;
    const visualizer_customer_id = customerIdMatch ? customerIdMatch[1] : undefined;
    if(visualizer_customer_is_logged !== undefined && visualizer_customer_id !== undefined) {
      if(visualizer_customer_is_logged && visualizer_customer_id) {
        dispatch(featureActions.setUserInfo({isLoggedIn:visualizer_customer_is_logged, customerId:visualizer_customer_id}))
      }
    }

    // getting language info
    if(document.getElementById("language-selector-label")){
      let labelText = document.getElementById("language-selector-label").innerText.trim();
      if(labelText === 'English') {
        dispatch(featureActions.setLanguage('en'));
      }else{
        dispatch(featureActions.setLanguage('lt'));
      }
    }
  });*/



=====================================
<div id="root" data-assetsurl="/modules/revisualizer/src/app/assets/" data-locale="en" data-addtocart="https://clay.powdev.lt/en/module/revisualizer/visualizer?ajax=1&amp;add-to-cart=1" data-getcolors="https://clay.powdev.lt/en/module/revisualizer/colors?ajax=1&amp;v=12" data-getobjects="https://clay.powdev.lt/en/module/revisualizer/objects?ajax=1" 
data-setobjects="https://clay.powdev.lt/en/module/revisualizer/objects?ajax=1" 
data-getpallets="https://clay.powdev.lt/en/module/revisualizer/pallets?ajax=1&amp;action=getPallets" data-setpallets="https://clay.powdev.lt/en/module/revisualizer/pallets?ajax=1&amp;action=setPallet"></div>



https://clay.powdev.lt/module/revisualizer/app
Login: clay
psw:Claypro31

for data-calculateprice endpoint
// I will send post request with this sample param
{
  "action": "calculateprice",
  "payload": {
    "id": 75,          // Required: ID of the product attribute
    "size": 1.4        // Required: Surface area in square meters
  }
}

// I hope the response like bellow example
{
  "success": true,
  "data": {
    "price": 76.36   // Final calculated price based on `id` and `size`
  }
}
